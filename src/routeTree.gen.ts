/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2Import } from './routes/(auth)/sign-in-2'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AdminSettingsRouteImport } from './routes/admin/settings/route'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminTasksIndexImport } from './routes/admin/tasks/index'
import { Route as AdminSettingsIndexImport } from './routes/admin/settings/index'
import { Route as AdminHelpCenterIndexImport } from './routes/admin/help-center/index'
import { Route as AdminChatsIndexImport } from './routes/admin/chats/index'
import { Route as AdminAppsIndexImport } from './routes/admin/apps/index'
import { Route as PublicPage2IndexImport } from './routes/_public/page2/index'
import { Route as AdminSettingsNotificationsImport } from './routes/admin/settings/notifications'
import { Route as AdminSettingsDisplayImport } from './routes/admin/settings/display'
import { Route as AdminSettingsAppearanceImport } from './routes/admin/settings/appearance'
import { Route as AdminSettingsAccountImport } from './routes/admin/settings/account'

// Create/Update Routes

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignIn2Route = authSignIn2Import.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AdminSettingsRouteRoute = AdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminTasksIndexRoute = AdminTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminSettingsIndexRoute = AdminSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)

const AdminHelpCenterIndexRoute = AdminHelpCenterIndexImport.update({
  id: '/help-center/',
  path: '/help-center/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminChatsIndexRoute = AdminChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAppsIndexRoute = AdminAppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const PublicPage2IndexRoute = PublicPage2IndexImport.update({
  id: '/page2/',
  path: '/page2/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const AdminSettingsNotificationsRoute = AdminSettingsNotificationsImport.update(
  {
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdminSettingsRouteRoute,
  } as any,
)

const AdminSettingsDisplayRoute = AdminSettingsDisplayImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)

const AdminSettingsAppearanceRoute = AdminSettingsAppearanceImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)

const AdminSettingsAccountRoute = AdminSettingsAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/settings/account': {
      id: '/admin/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AdminSettingsAccountImport
      parentRoute: typeof AdminSettingsRouteImport
    }
    '/admin/settings/appearance': {
      id: '/admin/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AdminSettingsAppearanceImport
      parentRoute: typeof AdminSettingsRouteImport
    }
    '/admin/settings/display': {
      id: '/admin/settings/display'
      path: '/display'
      fullPath: '/admin/settings/display'
      preLoaderRoute: typeof AdminSettingsDisplayImport
      parentRoute: typeof AdminSettingsRouteImport
    }
    '/admin/settings/notifications': {
      id: '/admin/settings/notifications'
      path: '/notifications'
      fullPath: '/admin/settings/notifications'
      preLoaderRoute: typeof AdminSettingsNotificationsImport
      parentRoute: typeof AdminSettingsRouteImport
    }
    '/_public/page2/': {
      id: '/_public/page2/'
      path: '/page2'
      fullPath: '/page2'
      preLoaderRoute: typeof PublicPage2IndexImport
      parentRoute: typeof PublicRouteImport
    }
    '/admin/apps/': {
      id: '/admin/apps/'
      path: '/apps'
      fullPath: '/admin/apps'
      preLoaderRoute: typeof AdminAppsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/chats/': {
      id: '/admin/chats/'
      path: '/chats'
      fullPath: '/admin/chats'
      preLoaderRoute: typeof AdminChatsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/help-center/': {
      id: '/admin/help-center/'
      path: '/help-center'
      fullPath: '/admin/help-center'
      preLoaderRoute: typeof AdminHelpCenterIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AdminSettingsIndexImport
      parentRoute: typeof AdminSettingsRouteImport
    }
    '/admin/tasks/': {
      id: '/admin/tasks/'
      path: '/tasks'
      fullPath: '/admin/tasks'
      preLoaderRoute: typeof AdminTasksIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface PublicRouteRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
  PublicPage2IndexRoute: typeof PublicPage2IndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
  PublicPage2IndexRoute: PublicPage2IndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

interface AdminSettingsRouteRouteChildren {
  AdminSettingsAccountRoute: typeof AdminSettingsAccountRoute
  AdminSettingsAppearanceRoute: typeof AdminSettingsAppearanceRoute
  AdminSettingsDisplayRoute: typeof AdminSettingsDisplayRoute
  AdminSettingsNotificationsRoute: typeof AdminSettingsNotificationsRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
}

const AdminSettingsRouteRouteChildren: AdminSettingsRouteRouteChildren = {
  AdminSettingsAccountRoute: AdminSettingsAccountRoute,
  AdminSettingsAppearanceRoute: AdminSettingsAppearanceRoute,
  AdminSettingsDisplayRoute: AdminSettingsDisplayRoute,
  AdminSettingsNotificationsRoute: AdminSettingsNotificationsRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
}

const AdminSettingsRouteRouteWithChildren =
  AdminSettingsRouteRoute._addFileChildren(AdminSettingsRouteRouteChildren)

interface AdminRouteRouteChildren {
  AdminSettingsRouteRoute: typeof AdminSettingsRouteRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAppsIndexRoute: typeof AdminAppsIndexRoute
  AdminChatsIndexRoute: typeof AdminChatsIndexRoute
  AdminHelpCenterIndexRoute: typeof AdminHelpCenterIndexRoute
  AdminTasksIndexRoute: typeof AdminTasksIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminSettingsRouteRoute: AdminSettingsRouteRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
  AdminAppsIndexRoute: AdminAppsIndexRoute,
  AdminChatsIndexRoute: AdminChatsIndexRoute,
  AdminHelpCenterIndexRoute: AdminHelpCenterIndexRoute,
  AdminTasksIndexRoute: AdminTasksIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/settings': typeof AdminSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof PublicIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/page2': typeof PublicPage2IndexRoute
  '/admin/apps': typeof AdminAppsIndexRoute
  '/admin/chats': typeof AdminChatsIndexRoute
  '/admin/help-center': typeof AdminHelpCenterIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/tasks': typeof AdminTasksIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof PublicIndexRoute
  '/admin': typeof AdminIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/page2': typeof PublicPage2IndexRoute
  '/admin/apps': typeof AdminAppsIndexRoute
  '/admin/chats': typeof AdminChatsIndexRoute
  '/admin/help-center': typeof AdminHelpCenterIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/tasks': typeof AdminTasksIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_public': typeof PublicRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/settings': typeof AdminSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_public/': typeof PublicIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/_public/page2/': typeof PublicPage2IndexRoute
  '/admin/apps/': typeof AdminAppsIndexRoute
  '/admin/chats/': typeof AdminChatsIndexRoute
  '/admin/help-center/': typeof AdminHelpCenterIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/tasks/': typeof AdminTasksIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin'
    | '/admin/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/admin/'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/page2'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/settings/'
    | '/admin/tasks'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/admin'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/page2'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/users'
  id:
    | '__root__'
    | '/_public'
    | '/admin'
    | '/admin/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_public/'
    | '/admin/'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/_public/page2/'
    | '/admin/apps/'
    | '/admin/chats/'
    | '/admin/help-center/'
    | '/admin/settings/'
    | '/admin/tasks/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  PublicRouteRoute: PublicRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_public",
        "/admin",
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/",
        "/_public/page2/"
      ]
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/settings",
        "/admin/",
        "/admin/apps/",
        "/admin/chats/",
        "/admin/help-center/",
        "/admin/tasks/",
        "/admin/users/"
      ]
    },
    "/admin/settings": {
      "filePath": "admin/settings/route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/settings/account",
        "/admin/settings/appearance",
        "/admin/settings/display",
        "/admin/settings/notifications",
        "/admin/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/admin/settings/account": {
      "filePath": "admin/settings/account.tsx",
      "parent": "/admin/settings"
    },
    "/admin/settings/appearance": {
      "filePath": "admin/settings/appearance.tsx",
      "parent": "/admin/settings"
    },
    "/admin/settings/display": {
      "filePath": "admin/settings/display.tsx",
      "parent": "/admin/settings"
    },
    "/admin/settings/notifications": {
      "filePath": "admin/settings/notifications.tsx",
      "parent": "/admin/settings"
    },
    "/_public/page2/": {
      "filePath": "_public/page2/index.tsx",
      "parent": "/_public"
    },
    "/admin/apps/": {
      "filePath": "admin/apps/index.tsx",
      "parent": "/admin"
    },
    "/admin/chats/": {
      "filePath": "admin/chats/index.tsx",
      "parent": "/admin"
    },
    "/admin/help-center/": {
      "filePath": "admin/help-center/index.tsx",
      "parent": "/admin"
    },
    "/admin/settings/": {
      "filePath": "admin/settings/index.tsx",
      "parent": "/admin/settings"
    },
    "/admin/tasks/": {
      "filePath": "admin/tasks/index.tsx",
      "parent": "/admin"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
